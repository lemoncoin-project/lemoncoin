# errata:
# - A travis bug causes caches to trample eachother when using the same
#   compiler key (which we don't use anyway). This is worked around for now by
#   replacing the "compilers" with a build name prefixed by the no-op ":"
#   command. See: https://github.com/travis-ci/travis-ci/issues/4393
# - sudo/dist/group are set so as to get Blue Box VMs, necessary for [loopback]
#   IPv6 support

sudo: required
dist: precise
group: legacy

os: linux
language: cpp
compiler: gcc
env:
  global:
    - MAKEJOBS=-j3
    - RUN_TESTS=false
    - CHECK_DOC=0
    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
    - CCACHE_SIZE=100M
    - CCACHE_TEMPDIR=/tmp/.ccache-temp
    - CCACHE_COMPRESS=1
    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
    - SDK_URL=https://bitcoincore.org/depends-sources/sdks
    - PYTHON_DEBUG=1
    - WINEDEBUG=fixme-all
    - secure: "n8135wOgZv59bE49RZSwgjZfZVVXODdan1CrzPfCSwdOVyOLS4C5hLb7sEs3u8BAtVSvHtl5T8ii15YQx4V3OFMZs556cSvM2SbAEnPlELz+Yn5XeqC11QNzrK9HQbx6Xs2dOmRRANr05BP2e0BpPPUlF2HRZmVsc1IyFJ+ZtzxrW3TspES6+cbdfnirUrc6CMwvxoboSRKrrAfsWFoBeGCGZ3IawLSK15GDsjMBv6lTgCmwjhC/eTT3PLQhLI3ivgkDWHhaK3UNGg+CnsGV5jHx61DsXNk0kFVdjto5UHeQlAALVSZoNiGNn4npigr1+Lgn95t8IgPlQ7dGDxThK3+UIjcNuZjZEkYHu7fPBcK8+NYA2fJ/Mn+s54lytXMPB1YAbAU3RoxFRogktKHRbGbV0XfeFBHP9cxHK1MLq8/tymjK/bsjIcNL0Gz3BXWJhf4WNGBrOnAOmRMSHk55MhKzm8IfBaG4/u+lvfBtzEmf6Z/8S1SsdjOhagt5xLog+KT1PV8cohIY1dBizSdE6vOnxGQhQ6UHEJZieCKwPB+4lc0E0VkWSoXUmvmjmtxmmNXGgdUMS8ifA5gpwyGPNN9ZKgbnZNuHAMmCLh7O88QYPSUzMO9QDAfPVMtCa2AS0jC58yJuPkiObQ/FPgJ1qAN+pTrWa0ITChekn59YPps="
    - secure: "OAGc6yMkuafCMuM+BCxFeZJRj5Dnd1UstA4AAgHA/JdEBAvDbQ2hS1qXbiRQqNpgiW1SPKvSj5Q3jDr/uZ6b1LSJA0G5HlDCInFWNYkwzuZpBP8o/y3b5CTYuN2HZHRe8/HSq6BjVkikXzGvN+Or63X9EPVplbEkHmWZ2Plt/vAJv+roTFF0byKwqN5gcCp62CbEsKgLiWwjeU4h0WzurqlQvc1zGqHjgtt2fL0NtC3QMvJnuyQSH8UkXFkufx6qv0AOx4O0bQzjNhc16Rami4gNXLwkBtXHtRrss6Vp5PwhDGStgRmmTRk/odQ8WbXhNikp5kJZrnIjwYjkWgnaVE62AWEntSFgIF5CVMDiUrDeMUy6ns5pPDIKxBzHC1+xdkUdaOWXrx7Fm+NE74UWVo6N/ihOBjz2wkLA7lCgrMxA0uSUZsf1F9XmqH9//rGpBsajAxCzmvWQqsYfequGbCbdnmKLiJUWYIWbQ9fYYcpjIcM/i+d/suLEvx4SgmZiqM+Zt/g5Fq5fzxJg3hTWf/wZ4Zjuo0apVZcd7zwJ6vS1tYF3D8Sq/iiLj5pljLcJLEElrv0aa/EyvFUtkjFT1l4exy2n9bNLagXr0B+t3HmmF8PqqgE0myd8y6OWosvCWqQo6MeX/Zxmoj/p/bXf7+k8Oo3RLBzppKBsWJJtj5w="
    - secure: "MNck06gQX+ynTY5uNQjbytFzGK7IAJdgAqqbLkbnf+cj4ufr/BIGv0fL9JCPCD0ebom/NJ6omnjaAsNWEENJsr5aOJhmGcEdJ6NVsPn3E2Gwo6ZjelH3mOaSsDXP2deBqOrIcCtpJwWJHNxH1M0hgUEsqY6byaWANrHZtILzS/tXmZKA7XpvRlitbe9Hi6ar6i53tZbO1dExgDAdlWIBwFanYbcs/Yw04n2nCdtyrkMMGVSvJTLOm8iDjUXr3oN8JKGDQCO+GlW3npQr/pnFZFsnyiP8uBCmBMle9WAgU4Xz4EmTHhBRL/ldV/AGUUgt8GhElOy4CnCP4AAE4sO8gGjk1zwJOng8YciVoZ/J8/TzEUQvN7NEvNW1p3cTO3Skg3DHZNndo62vChdPlxvzs/62r32QtiC1CsyevhrpxMEq7tAufai2jYSr+xoAXDqGvNqeXqMPDs5SV83FMMjWZVqOI3tB4DMySa9E+wa8DEqMWfDujh/KL4FcKPZpl1kx6H3sOITT9kiRjUCUR0RZZsFwmymgMWTjdPLukx7syirpw3LSM/5JfKSrBSKKmyi45yH1Xk5YY4NW9JikHnOtMr0lpsMQQ93MU+abEWPF1NRD3TxcWsX1PswYMJwJt5v5Q2Lb2eVoltjkm6IdXf/5jfJcepFSXgCSGI79wG9rD4I="
    - secure: "Pt7DPtNRUd+rRk0RWHHeyjSDZ3wC3rzh7AKyz/LH3Xeilszt2sXX1Mo1ZR10bSxhNuBH1YZmxzOZIsIzmC2cdcjak2ZUwexK1dgoa7klEDNmaN0O4/L3CrufcCI4bZsr0QfuVGQqMxow1IqyNcGceTnxoWRoARZSquBzMa3BOFgPjk9gUj7GJ53zzDn2+IHAOF3hMOChoUxS9KrArreIuY0AXISBws+7X1TWyu1DoI6hZgzrQsLPeXi+12w7S0NvUcK5UKz0Xs1bDsZMslL5C+CzHzQ8cwhxxMwit4TW/wJ4S1MlXM6extW+E+zaC/MN2tUlRkRRudM8PMiIy0QYsms/fDGtbgVNCXn6LvIEOsBo6iRuzdzk1jriftr4M9ZvmQFaHqqT94sXkadEBnyxq3Vf57BDC174v6bUlReJslYEXTevoGBnz1ADuRXgrCQT/L6lC+MRUdsMoNGMKVjAKsCzAQOQcA1JgxgHrySJtpW0+tzRZdSiEukE/9LZtxlPNdYQFmjMCyNXXX9yNOEt8xZvH1CjkJ3CKJumEKLTRoz4CyCLeS47OkZkHu7e4yLjP4vItFoBgft4J8cCmYYAT3K2qMLUHYFMhgQ0PiZ7NQA5iqWHguZlqyKtneOxM10Morf7hSHQE3gefsvP01G7sOL9kJ1l2gWI2JeaG5S92Qk="
addons:
    apt:
        packages:
            - sshpass
cache:
  apt: true
  directories:
  - depends/built
  - depends/sdk-sources
  - $HOME/.ccache
matrix:
  fast_finish: true
  include:
# Arm is not yet supported because of Scrypt-Jane
#    - compiler: ": ARM"
#      env: HOST=arm-linux-gnueabihf PACKAGES="g++-arm-linux-gnueabihf" DEP_OPTS="NO_QT=1" CHECK_DOC=1 GOAL="install" BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
    - compiler: ": Win32"
      env: HOST=i686-w64-mingw32 PPA="ppa:ubuntu-wine/ppa" PACKAGES="nsis gcc-mingw-w64-i686 g++-mingw-w64-i686 binutils-mingw-w64-i686 mingw-w64-dev wine1.7 bc" RUN_TESTS=true GOAL="deploy" BITCOIN_CONFIG="--enable-gui --enable-reduce-exports" MAKEJOBS="-j2"
    - compiler: ": Win64"
      env: HOST=x86_64-w64-mingw32 PPA="ppa:ubuntu-wine/ppa" PACKAGES="nsis gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 binutils-mingw-w64-x86-64 mingw-w64-dev wine1.7 bc" RUN_TESTS=true GOAL="deploy" BITCOIN_CONFIG="--enable-gui --enable-reduce-exports" MAKEJOBS="-j2"
    - compiler: ": 32-bit + dash"
      env: HOST=i686-pc-linux-gnu PACKAGES="g++-multilib bc python-zmq" PPA="ppa:chris-lea/zeromq" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++" USE_SHELL="/bin/dash"
    - compiler: ": bitcoind"
      env: HOST=x86_64-unknown-linux-gnu PACKAGES="bc python-zmq" PPA="ppa:chris-lea/zeromq" DEP_OPTS="NO_QT=1 NO_UPNP=1 DEBUG=1" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER"
    - compiler: ": No wallet"
      env: HOST=x86_64-unknown-linux-gnu DEP_OPTS="NO_WALLET=1" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
    - compiler: ": Cross-Mac"
      env: HOST=x86_64-apple-darwin11 PACKAGES="cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev" BITCOIN_CONFIG="--enable-reduce-exports" OSX_SDK=10.9 GOAL="deploy"
  exclude:
    - compiler: gcc
install:
    - if [ -n "$PACKAGES" ]; then sudo rm -f /etc/apt/sources.list.d/travis_ci_zeromq3-source.list; fi
    - if [ -n "$PPA" ]; then travis_retry sudo add-apt-repository "$PPA" -y; fi
    - if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get update; fi
    - if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi
before_script:
    - unset CC; unset CXX
    - if [ "$CHECK_DOC" = 1 ]; then contrib/devtools/check-doc.py; fi
    - mkdir -p depends/SDKs depends/sdk-sources
    - if [ -n "$OSX_SDK" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi
    - if [ -n "$OSX_SDK" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi
    - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS
script:
    - if [ -n "$USE_SHELL" ]; then export CONFIG_SHELL="$USE_SHELL"; fi
    - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST
    - BITCOIN_CONFIG_ALL="--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib"
    - depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE
    - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export CCACHE_READONLY=1; fi
    - test -n "$USE_SHELL" && eval '"$USE_SHELL" -c "./autogen.sh"' || ./autogen.sh
    - ./configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)
    - make distdir PACKAGE=bitcoin VERSION=$HOST
    - cd bitcoin-$HOST
    - ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)
    - make $MAKEJOBS $GOAL || ( echo "Build failure. Verbose build follows." && make $GOAL V=1 ; false )
    - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib
# Don't run tests, they are not ready yet
#    - if [ "$RUN_TESTS" = "true" ]; then make check; fi
#    - if [ "$RUN_TESTS" = "true" ]; then qa/pull-tester/rpc-tests.py --coverage; fi
after_script:
    - export SSHPASS=$DEPLOY_PASS
    - sshpass -e scp -r $BASE_OUTDIR $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH

